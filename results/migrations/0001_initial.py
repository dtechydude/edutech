# Generated by Django 4.2.15 on 2024-08-14 15:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('curriculum', '0001_initial'),
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('term', models.CharField(choices=[('First Term', 'First Term'), ('Second Term', 'Second Term'), ('Third Term', 'Third Term'), ('others', 'others')], default='others', max_length=15)),
                ('exam_date', models.DateField(null=True)),
                ('description', models.CharField(blank=True, max_length=150)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.session')),
                ('standard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='curriculum.standard')),
            ],
            options={
                'verbose_name': 'Examinations',
                'verbose_name_plural': 'Examinations',
            },
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ResultSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_1ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_1exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_2ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_2exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_3ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_3exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_4ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_4exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_5ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_5exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_6ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_6exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_7ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_7exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_8ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_8exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_9ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_9exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_10ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_10exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_11ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_11exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_12ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_12exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_13ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_13exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_14ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_14exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_15ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_15exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_16ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_16exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_17ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_17exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_18ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_18exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_19ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_19exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_20ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_20exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('class_teacher_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('principal_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('no_days_school_open', models.IntegerField(blank=True, default=0)),
                ('no_days_present', models.IntegerField(blank=True, default=0)),
                ('next_term_resume', models.DateField(blank=True, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.examination')),
                ('student_detail', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.studentdetail')),
                ('student_id', models.ForeignKey(blank=True, default=None, help_text='confirm student username', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1', to='results.examsubject')),
                ('subject_10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_10', to='results.examsubject')),
                ('subject_11', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_11', to='results.examsubject')),
                ('subject_12', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_12', to='results.examsubject')),
                ('subject_13', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_13', to='results.examsubject')),
                ('subject_14', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_14', to='results.examsubject')),
                ('subject_15', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_15', to='results.examsubject')),
                ('subject_16', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_16', to='results.examsubject')),
                ('subject_17', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_17', to='results.examsubject')),
                ('subject_18', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_18', to='results.examsubject')),
                ('subject_19', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_19', to='results.examsubject')),
                ('subject_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_2', to='results.examsubject')),
                ('subject_20', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_20', to='results.examsubject')),
                ('subject_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_3', to='results.examsubject')),
                ('subject_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_4', to='results.examsubject')),
                ('subject_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_5', to='results.examsubject')),
                ('subject_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_6', to='results.examsubject')),
                ('subject_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_7', to='results.examsubject')),
                ('subject_8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_8', to='results.examsubject')),
                ('subject_9', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_9', to='results.examsubject')),
            ],
            options={
                'verbose_name': '1st Term Result',
                'verbose_name_plural': '1st Term Result',
                'ordering': ['student_detail'],
                'unique_together': {('student_detail', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='ResultSheet2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_1ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_1exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_2ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_2exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_3ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_3exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_4ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_4exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_5ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_5exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_6ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_6exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_7ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_7exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_8ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_8exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_9ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_9exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_10ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_10exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_11ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_11exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_12ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_12exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_13ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_13exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_14ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_14exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_15ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_15exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_16ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_16exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_17ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_17exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_18ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_18exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_19ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_19exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_20ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_20exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('class_teacher_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('principal_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('no_days_school_open', models.IntegerField(blank=True, default=0)),
                ('no_days_present', models.IntegerField(blank=True, default=0)),
                ('next_term_resume', models.DateField(blank=True, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.examination')),
                ('student_detail', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.studentdetail')),
                ('student_id', models.ForeignKey(blank=True, default=None, help_text='confirm student username', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_102', to='results.examsubject')),
                ('subject_10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1002', to='results.examsubject')),
                ('subject_11', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1102', to='results.examsubject')),
                ('subject_12', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1202', to='results.examsubject')),
                ('subject_13', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1302', to='results.examsubject')),
                ('subject_14', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1402', to='results.examsubject')),
                ('subject_15', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1502', to='results.examsubject')),
                ('subject_16', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1602', to='results.examsubject')),
                ('subject_17', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1702', to='results.examsubject')),
                ('subject_18', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1802', to='results.examsubject')),
                ('subject_19', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1902', to='results.examsubject')),
                ('subject_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_202', to='results.examsubject')),
                ('subject_20', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_2002', to='results.examsubject')),
                ('subject_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_302', to='results.examsubject')),
                ('subject_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_402', to='results.examsubject')),
                ('subject_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_502', to='results.examsubject')),
                ('subject_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_602', to='results.examsubject')),
                ('subject_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_702', to='results.examsubject')),
                ('subject_8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_802', to='results.examsubject')),
                ('subject_9', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_902', to='results.examsubject')),
            ],
            options={
                'verbose_name': '2nd Term Result',
                'verbose_name_plural': '2nd Term Result',
                'ordering': ['student_detail'],
                'unique_together': {('student_detail', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='UploadCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(blank=True, help_text='Paste Certificate Link', max_length=300)),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.examination')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.session')),
                ('standard', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='curriculum.standard')),
                ('student', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.studentdetail')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificate',
            },
        ),
        migrations.CreateModel(
            name='ResultSheet3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_1ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_1exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_2ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_2exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_3ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_3exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_4ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_4exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_5ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_5exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_6ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_6exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_7ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_7exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_8ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_8exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_9ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_9exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_10ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_10exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_11ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_11exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_12ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_12exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_13ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_13exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_14ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_14exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_15ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_15exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_16ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_16exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_17ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_17exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_18ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_18exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_19ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_19exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_20ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_20exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('class_teacher_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('principal_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('no_days_school_open', models.IntegerField(blank=True, default=0)),
                ('no_days_present', models.IntegerField(blank=True, default=0)),
                ('next_term_resume', models.DateField(blank=True, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.examination')),
                ('first_term', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='first_term', to='results.resultsheet')),
                ('second_term', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_term', to='results.resultsheet2')),
                ('student_detail', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.studentdetail')),
                ('student_id', models.ForeignKey(blank=True, default=None, help_text='confirm student username', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject_1', models.ForeignKey(blank=True, help_text='English Language', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_103', to='results.examsubject')),
                ('subject_10', models.ForeignKey(blank=True, help_text='Government', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1003', to='results.examsubject')),
                ('subject_11', models.ForeignKey(blank=True, help_text='English Literature', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1103', to='results.examsubject')),
                ('subject_12', models.ForeignKey(blank=True, help_text='Yoruba Language', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1203', to='results.examsubject')),
                ('subject_13', models.ForeignKey(blank=True, help_text='French Language', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1303', to='results.examsubject')),
                ('subject_14', models.ForeignKey(blank=True, help_text='Social Studies', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1403', to='results.examsubject')),
                ('subject_15', models.ForeignKey(blank=True, help_text='C.R.K', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1503', to='results.examsubject')),
                ('subject_16', models.ForeignKey(blank=True, help_text='Basic Technology', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1603', to='results.examsubject')),
                ('subject_17', models.ForeignKey(blank=True, help_text='Music', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1703', to='results.examsubject')),
                ('subject_18', models.ForeignKey(blank=True, help_text='Physical Education (PHE)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1803', to='results.examsubject')),
                ('subject_19', models.ForeignKey(blank=True, help_text='Home Economic', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_1903', to='results.examsubject')),
                ('subject_2', models.ForeignKey(blank=True, help_text='Mathematics', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_203', to='results.examsubject')),
                ('subject_20', models.ForeignKey(blank=True, help_text='Igbo Language', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_2003', to='results.examsubject')),
                ('subject_3', models.ForeignKey(blank=True, help_text='Economics', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_303', to='results.examsubject')),
                ('subject_4', models.ForeignKey(blank=True, help_text='Geography', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_403', to='results.examsubject')),
                ('subject_5', models.ForeignKey(blank=True, help_text='Physics', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_503', to='results.examsubject')),
                ('subject_6', models.ForeignKey(blank=True, help_text='Chemistry', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_603', to='results.examsubject')),
                ('subject_7', models.ForeignKey(blank=True, help_text='Civic Education', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_703', to='results.examsubject')),
                ('subject_8', models.ForeignKey(blank=True, help_text='Computer', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_803', to='results.examsubject')),
                ('subject_9', models.ForeignKey(blank=True, help_text='Biology', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_903', to='results.examsubject')),
            ],
            options={
                'verbose_name': '3rd Term Result',
                'verbose_name_plural': '3rd Term Result',
                'ordering': ['student_detail'],
                'unique_together': {('student_detail', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='ResultImage3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirm_publish', models.BooleanField(default=False)),
                ('f_1', models.ImageField(default='report_card_header.png', help_text='Do not upload file', upload_to='school_logo')),
                ('f_2', models.ImageField(default='qr_code.jpg', help_text='Do not upload file', upload_to='school_logo')),
                ('f_3', models.ImageField(default='sign.jpg', help_text='Do not upload file', upload_to='school_logo')),
                ('resultsheet', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resultimages3', to='results.resultsheet3')),
            ],
            options={
                'verbose_name': 'Re-confirm Publish to enable student view result',
            },
        ),
        migrations.CreateModel(
            name='ResultImage2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirm_publish', models.BooleanField(default=False)),
                ('f_1', models.ImageField(default='report_card_header.png', help_text='Do not upload file', upload_to='school_logo')),
                ('f_2', models.ImageField(default='qr_code.jpg', help_text='Do not upload file', upload_to='school_logo')),
                ('f_3', models.ImageField(default='sign.jpg', help_text='Do not upload file', upload_to='school_logo')),
                ('resultsheet', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resultimages2', to='results.resultsheet2')),
            ],
            options={
                'verbose_name': 'Re-confirm Publish to enable student view result',
            },
        ),
        migrations.CreateModel(
            name='ResultImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirm_publish', models.BooleanField(default=False)),
                ('f_1', models.ImageField(default='report_card_header.png', help_text='Do not upload file', upload_to='school_logo')),
                ('f_2', models.ImageField(default='qr_code.jpg', help_text='Do not upload file', upload_to='school_logo')),
                ('f_3', models.ImageField(default='sign.jpg', help_text='Do not upload file', upload_to='school_logo')),
                ('resultsheet', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resultimages', to='results.resultsheet')),
            ],
            options={
                'verbose_name': 'Re-confirm Publish to enable student view result',
            },
        ),
        migrations.CreateModel(
            name='MotorAbility3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('honesty', models.IntegerField(blank=True, default=0, help_text='Honest', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('politeness', models.IntegerField(blank=True, default=0, help_text='Politeness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('neatness', models.IntegerField(blank=True, default=0, help_text='Neatness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('co_operation', models.IntegerField(blank=True, default=0, help_text='Co-operation', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('perseverance', models.IntegerField(blank=True, default=0, help_text='Perseverance', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('leadership', models.IntegerField(blank=True, default=0, help_text='Leadership', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('punctuality', models.IntegerField(blank=True, default=0, help_text='Punctuality', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('obedience', models.IntegerField(blank=True, default=0, help_text='Obedience', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attentiveness', models.IntegerField(blank=True, default=0, help_text='Attentiveness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('emotional_stability', models.IntegerField(blank=True, default=0, help_text='Emotional Stability', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attitude', models.IntegerField(blank=True, default=0, help_text='Attitude', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('musical', models.IntegerField(blank=True, default=0, help_text='Musical', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('games', models.IntegerField(blank=True, default=0, help_text='Games', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handwriting', models.IntegerField(blank=True, default=0, help_text='Handwriting', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('reading', models.IntegerField(blank=True, default=0, help_text='Reading', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('verbal_fluency', models.IntegerField(blank=True, default=0, help_text='Verbal Fluency', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handling_tools', models.IntegerField(blank=True, default=0, help_text='Handling Tools', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('physical_education', models.IntegerField(blank=True, default=0, help_text='Physical Education', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('resultsheet', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='motorabilitys3', to='results.resultsheet3')),
            ],
        ),
        migrations.CreateModel(
            name='MotorAbility2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('honesty', models.IntegerField(blank=True, default=0, help_text='Honest', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('politeness', models.IntegerField(blank=True, default=0, help_text='Politeness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('neatness', models.IntegerField(blank=True, default=0, help_text='Neatness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('co_operation', models.IntegerField(blank=True, default=0, help_text='Co-operation', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('perseverance', models.IntegerField(blank=True, default=0, help_text='Perseverance', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('leadership', models.IntegerField(blank=True, default=0, help_text='Leadership', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('punctuality', models.IntegerField(blank=True, default=0, help_text='Punctuality', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('obedience', models.IntegerField(blank=True, default=0, help_text='Obedience', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attentiveness', models.IntegerField(blank=True, default=0, help_text='Attentiveness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('emotional_stability', models.IntegerField(blank=True, default=0, help_text='Emotional Stability', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attitude', models.IntegerField(blank=True, default=0, help_text='Attitude', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('musical', models.IntegerField(blank=True, default=0, help_text='Musical', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('games', models.IntegerField(blank=True, default=0, help_text='Games', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handwriting', models.IntegerField(blank=True, default=0, help_text='Handwriting', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('reading', models.IntegerField(blank=True, default=0, help_text='Reading', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('verbal_fluency', models.IntegerField(blank=True, default=0, help_text='Verbal Fluency', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handling_tools', models.IntegerField(blank=True, default=0, help_text='Handling Tools', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('physical_education', models.IntegerField(blank=True, default=0, help_text='Physical Education', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('resultsheet', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='motorabilitys2', to='results.resultsheet2')),
            ],
        ),
        migrations.CreateModel(
            name='MotorAbility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('honesty', models.IntegerField(blank=True, default=0, help_text='Honest', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('politeness', models.IntegerField(blank=True, default=0, help_text='Politeness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('neatness', models.IntegerField(blank=True, default=0, help_text='Neatness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('co_operation', models.IntegerField(blank=True, default=0, help_text='Co-operation', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('perseverance', models.IntegerField(blank=True, default=0, help_text='Perseverance', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('leadership', models.IntegerField(blank=True, default=0, help_text='Leadership', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('punctuality', models.IntegerField(blank=True, default=0, help_text='Punctuality', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('obedience', models.IntegerField(blank=True, default=0, help_text='Obedience', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attentiveness', models.IntegerField(blank=True, default=0, help_text='Attentiveness', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('emotional_stability', models.IntegerField(blank=True, default=0, help_text='Emotional Stability', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('attitude', models.IntegerField(blank=True, default=0, help_text='Attitude', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('musical', models.IntegerField(blank=True, default=0, help_text='Musical', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('games', models.IntegerField(blank=True, default=0, help_text='Games', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handwriting', models.IntegerField(blank=True, default=0, help_text='Handwriting', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('reading', models.IntegerField(blank=True, default=0, help_text='Reading', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('verbal_fluency', models.IntegerField(blank=True, default=0, help_text='Verbal Fluency', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('handling_tools', models.IntegerField(blank=True, default=0, help_text='Handling Tools', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('physical_education', models.IntegerField(blank=True, default=0, help_text='Physical Education', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('resultsheet', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='motorabilitys', to='results.resultsheet')),
            ],
        ),
        migrations.CreateModel(
            name='MarkedSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(null=True)),
                ('cand_score', models.IntegerField(blank=True)),
                ('pass_mark', models.IntegerField(blank=True)),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('exam_paper', models.CharField(blank=True, help_text='Paste link to marked sheet', max_length=300)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.examination')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.session')),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.standard')),
                ('student', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.studentdetail')),
                ('subject_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.subject')),
            ],
            options={
                'verbose_name': 'Marked Sheet',
                'verbose_name_plural': 'Marked Sheet',
            },
        ),
    ]
